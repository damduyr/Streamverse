@model Streamverse.Models.Admin
@if (!String.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <script type="text/javascript">alert('Error: '+@Html.Raw(Json.Encode(ViewBag.ErrorMessage)));</script>
}
@{
    ViewBag.Title = "";
}

<h2 style="text-align:center;">Edit Admin Details</h2>

@using (Html.BeginForm())
{

    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.AdminID)

        <div class="form-group">
            @Html.LabelFor(model => model.First_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.First_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.First_Name, "", new { @class = "text-danger", style = "color:white;" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Last_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Last_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Last_Name, "", new { @class = "text-danger", style = "color:white;" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger", style = "color:white;" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger", style = "color:white;" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccessLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownListFor(model => model.AccessLevel,
        new SelectList(new List<SelectListItem>
         {
            new SelectListItem {Text="ContentManager", Value = "ContentManager"},
            new SelectListItem {Text="DataAnalyst", Value = "DataAnalyst"},
         }, "Value", "Text"), "--------------Select--------------", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccessLevel, "", new { @class = "text-danger", style = "color:white;" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.activeStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.activeStatus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.activeStatus, "", new { @class = "text-danger", style = "color:white;" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div style="margin-left:30px;">
    @Html.ActionLink("Back to List", "SystemAdminPage", new { adminID = TempData["LoggedInAdminID"] })
</div>
